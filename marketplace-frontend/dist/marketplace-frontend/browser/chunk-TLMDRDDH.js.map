{
  "version": 3,
  "sources": ["src/app/vehicle-marketplace/vehicle-marketplace.service.ts", "src/app/vehicle-marketplace/vehicle-marketplace.component.ts", "src/app/vehicle-marketplace/vehicle-marketplace.component.html"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root', // Stellt sicher, dass der Service global bereitgestellt wird\r\n})\r\nexport class VehicleMarketplaceService {\r\n  private apiUrl = 'http://localhost:3000/api/vehicles';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCategories() {\r\n    return this.http.get(`${this.apiUrl}/categories`);\r\n  }\r\n\r\n  getMarks(categoryId: number) {\r\n    return this.http.get(`${this.apiUrl}/marks/${categoryId}`);\r\n  }\r\n\r\n  getModels(markId: number) {\r\n    return this.http.get(`${this.apiUrl}/models/${markId}`);\r\n  }\r\n\r\n  getVehicleTypes(categoryId: number) {\r\n    return this.http.get(`${this.apiUrl}/vehicle-types/${categoryId}`);\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {provideHttpClient, withFetch} from '@angular/common/http';\r\nimport { VehicleMarketplaceService } from './vehicle-marketplace.service';\r\n\r\n@Component({\r\n  selector: 'app-vehicle-marketplace',\r\n  standalone: true,\r\n  templateUrl: './vehicle-marketplace.component.html',\r\n  styleUrls: ['./vehicle-marketplace.component.less'],\r\n  imports: [\r\n    CommonModule, // FÃ¼r Template-Funktionen wie *ngFor\r\n  ],\r\n  })\r\nexport class VehicleMarketplaceComponent implements OnInit {\r\n  categories: any[] = [];\r\n  marks: any[] = [];\r\n  models: any[] = [];\r\n  vehicleTypes: any[] = [];\r\n  selectedCategory: number | null = null;\r\n  selectedMark: number | null = null;\r\n  selectedModel: number | null = null;\r\n  selectedType: number | null = null;\r\n\r\n  constructor(private vehicleService: VehicleMarketplaceService) {}\r\n\r\n  ngOnInit(): void { // OnInit-Methode\r\n    this.vehicleService.getCategories().subscribe((categories: any) => {\r\n      this.categories = categories;\r\n    });\r\n  }\r\n\r\n  onCategoryChange(event: Event): void {\r\n    const target = event.target as HTMLSelectElement; // Explizit typisieren\r\n    const categoryId = Number(target.value); // Konvertiere den Wert in eine Zahl\r\n    this.selectedCategory = categoryId;\r\n\r\n    this.vehicleService.getMarks(categoryId).subscribe((marks: any) => {\r\n      this.marks = marks;\r\n    });\r\n\r\n    this.vehicleService.getVehicleTypes(categoryId).subscribe((types: any) => {\r\n      this.vehicleTypes = types;\r\n    });\r\n  }\r\n\r\n  onMarkChange(event: Event): void {\r\n    const target = event.target as HTMLSelectElement; // Explizit typisieren\r\n    const markId = Number(target.value); // Konvertiere den Wert in eine Zahl\r\n    this.selectedMark = markId;\r\n\r\n    this.vehicleService.getModels(markId).subscribe((models: any) => {\r\n      this.models = models;\r\n    });\r\n  }\r\n\r\n}\r\n", "<div>\r\n  <h1>Vehicle Marketplace</h1>\r\n  <form>\r\n    <!-- Kategorie-Auswahl -->\r\n    <label for=\"category\">Category:</label>\r\n    <select id=\"category\" (change)=\"onCategoryChange($event)\">\r\n      <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\r\n    </select>\r\n\r\n    <!-- Marke-Auswahl -->\r\n    <label for=\"mark\">Mark:</label>\r\n    <select id=\"mark\" (change)=\"onMarkChange($event)\">\r\n      <option *ngFor=\"let mark of marks\" [value]=\"mark.id\">{{ mark.name }}</option>\r\n    </select>\r\n\r\n    <!-- Modell-Auswahl -->\r\n    <label for=\"model\">Model:</label>\r\n    <select id=\"model\">\r\n      <option *ngFor=\"let model of models\" [value]=\"model.id\">{{ model.name }}</option>\r\n    </select>\r\n\r\n    <!-- Fahrzeugtyp-Auswahl -->\r\n    <label for=\"type\">Type:</label>\r\n    <select id=\"type\">\r\n      <option *ngFor=\"let type of vehicleTypes\" [value]=\"type.id\">{{ type.name }}</option>\r\n    </select>\r\n  </form>\r\n</div>\r\n"],
  "mappings": "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",
  "names": []
}
